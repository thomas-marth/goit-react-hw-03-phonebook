{"version":3,"sources":["components/ContactForm.js","components/Filter.js","components/ContactListItem.js","components/ContactList.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","type","onChange","Component","Filter","onChangeFilter","ContactListItem","contact","onDeleteContact","onClick","id","ContactList","contacts","map","App","filter","changeFilter","filterContacts","toLowerCase","includes","data","addContact","shortid","generate","sameName","find","sameNumber","alert","localStorage","getItem","prevState","JSON","parse","prevProps","setItem","stringify","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c60d293.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!this.state.name || !this.state.number) {\r\n      return;\r\n    }\r\n    this.props.onSubmitData({ ...this.state });\r\n    this.reset();\r\n  };\r\n  reset() {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <p></p>\r\n        <button type=\"submit\"> Add new contact </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <input name=\"filter\" onChange={onChangeFilter} value={value} />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => (\r\n  <>\r\n    <span>\r\n      {contact.name}: {contact.number}\r\n    </span>\r\n    <button onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n  </>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <ContactListItem\r\n            contact={contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport ContactList from \"./ContactList\";\r\nimport shortid from \"shortid\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"contacts\")) {\r\n      this.setState((prevState) => ({\r\n        contacts: [...JSON.parse(localStorage.getItem(\"contacts\"))],\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  onDeleteContact = (id) => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n  };\r\n\r\n  onSubmitData = (data) => {\r\n    const { contacts } = this.state;\r\n\r\n    const addContact = {\r\n      id: shortid.generate(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    const sameName = this.state.contacts.find(\r\n      (contact) =>\r\n        contact.name === addContact.name && contact.number === addContact.number\r\n    );\r\n\r\n    const sameNumber = this.state.contacts.find(\r\n      (contact) => contact.number === addContact.number\r\n    );\r\n\r\n    if (sameName) {\r\n      alert(`${addContact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    if (sameNumber) {\r\n      alert(`${addContact.number} is already in contacts!`);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      contacts: [...contacts, addContact],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm onSubmitData={this.onSubmitData} />\r\n        {contacts.length !== 0 && (\r\n          <>\r\n            <h2>Contacts</h2>\r\n            {contacts.length > 1 && (\r\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n            )}\r\n            <ContactList\r\n              contacts={this.filterContacts()}\r\n              onDeleteContact={this.onDeleteContact}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}